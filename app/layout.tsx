import type { Metadata } from "next";
import { IBM_Plex_Sans, Bebas_Neue } from "next/font/google"; // Import fonts from Google
import "./globals.css";
import { LayoutChildren } from "@/tsconfig/types";
import Body from "../components/ui/client-body";
import { Toaster } from "@/components/ui/toaster";
import { SessionProvider } from "next-auth/react";
import { auth } from "@/auth";
import { redirect } from "next/navigation";
import { after } from "next/server";
import { db } from "@/database/drizzle";
import { usersTable } from "@/database/schema";
import { eq } from "drizzle-orm";

// IBM Plex Sans configuration
const ibmPlexSans = IBM_Plex_Sans({
  weight: ["400", "500", "600", "700"], // Specify the weights you need
  subsets: ["latin"], // Include the subset
});

// Bebas Neue configuration
const bebasNeue = Bebas_Neue({
  weight: "400", // Bebas Neue only supports weight 400
  subsets: ["latin"], // Include the subset
  variable: "--bebas-neue", // Define a custom variable for Tailwind
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }: LayoutChildren) {
  const session = await auth();

  if (!session) redirect("/login");

  after(async () => {
    if (!session?.user?.id) {
      return;
    }

    const loginDate = new Date().toISOString().slice(0, 10);

    // Check if the lastActivityDate in the database matches the current login date.
    const curUser = await db
      .select()
      .from(usersTable)
      .where(eq(usersTable?.id, session?.user?.id))
      .limit(1);
    if (curUser[0]?.lastActivityDate === loginDate) return;

    // Update the lastActivityDate in the database for the current user when they log in again.
    await db
      .update(usersTable)
      .set({ lastActivityDate: loginDate })
      .where(eq(usersTable?.id, session?.user?.id));
  });

  return (
    <html
      lang="en"
      className={`${ibmPlexSans.className} ${bebasNeue.variable}`} // Include both font variables
    >
      <SessionProvider session={session}>
        <Body>
          {children}

          <Toaster />
        </Body>
      </SessionProvider>
    </html>
  );
}
